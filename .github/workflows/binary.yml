name: Binary Gems

on: [push, pull_request]

jobs:
  rcd_build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "aarch64-linux-gnu"
          - platform: "aarch64-linux-musl"
          - platform: "arm-linux-gnu"
          - platform: "arm-linux-musl"
          - platform: "arm64-darwin"
          - platform: "x64-mingw-ucrt"
          - platform: "x64-mingw32"
          - platform: "x86-linux-gnu"
          - platform: "x86-linux-musl"
          - platform: "x86-mingw32"
          - platform: "x86_64-darwin"
          - platform: "x86_64-linux-gnu"
          - platform: "x86_64-linux-musl"
          # - platform: "aarch64-mingw-ucrt"
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3"
      - run: bundle install

      - name: Create a dummy cert to satisfy the build
        run: |
          mkdir -p ~/.gem/
          ruby -ropenssl -e "puts OpenSSL::PKey::RSA.new(2048).to_pem" > ~/.gem/gem-private_key.pem
          gem cert --build travis-ci@dummy.org --private-key ~/.gem/gem-private_key.pem
          cp gem-public_cert.pem ~/.gem/gem-public_cert.pem

      - name: Build binary gem
        run: bundle exec rake gem:${{ matrix.platform }}

      - name: Upload binary gem
        uses: actions/upload-artifact@v4
        with:
          name: binary-gem-${{ matrix.platform }}
          path: pkg/*.gem

  job_test_binary:
    name: Test
    needs: rcd_build
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            ruby: "3.4"
            platform: "x64-mingw-ucrt"
          - os: windows-latest
            ruby: "3.2"
            platform: "x64-mingw-ucrt"
          - os: ubuntu-latest
            ruby: "3.2"
            platform: "x86_64-linux-gnu"
          - os: ubuntu-24.04-arm
            ruby: "3.4"
            platform: "aarch64-linux-gnu"
          - os: macos-latest
            ruby: "3.4"
            platform: "arm64-darwin"
          - os: macos-13
            ruby: "3.4"
            platform: "x86_64-darwin"

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        if: matrix.platform != 'x86-mingw32'
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}

      - name: Download gem from build job
        uses: actions/download-artifact@v4
        with:
          name: binary-gem-${{ matrix.platform }}

      - run: bundle install
      - run: gem install ruby-zint-*${{ matrix.platform }}.gem --verbose

      - name: Run specs
        run: ruby -rzint -S rspec -fd spec/**/*_spec.rb

  job_binary_multiarch:
    name: multiarch (${{matrix.gem_platform}} on ${{matrix.from_image}} ${{matrix.image_platform}})
    needs: rcd_build
    strategy:
      fail-fast: false
      matrix:
        include:
          - from_image: fedora:39
            image_platform: linux/x86_64
            gem_platform: x86_64-linux-gnu
            dockerfile: centos
          - from_image: alpine
            image_platform: linux/x86_64
            gem_platform: x86_64-linux-musl
            dockerfile: alpine
          - from_image: alpine
            image_platform: linux/arm64
            gem_platform: aarch64-linux-musl
            dockerfile: alpine
            os: ubuntu-24.04-arm

    runs-on: ${{ matrix.os || 'ubuntu-latest' }}
    steps:
      - uses: actions/checkout@v4
      - name: Download gem-${{ matrix.gem_platform }}
        uses: actions/download-artifact@v4
        with:
          name: binary-gem-${{ matrix.gem_platform }}
      - name: Build image and Run tests
        run: |
          docker build --rm --platform ${{matrix.image_platform}} --build-arg from_image=${{matrix.from_image}} ${{matrix.docker_arg}} -t ruby-test -f spec/env/Dockerfile.${{matrix.dockerfile}} .
          docker run --rm -t --network=host -v `pwd`:/build ruby-test
